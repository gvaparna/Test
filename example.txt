This is a simple text file!!!


Develop Branch
The master branch stores the official release history, 
and the develop branch serves as an integration branch for features. 
It's also convenient to tag all commits in the master branch with a version number.
- Derived from Master branch


release branch
Once develop has acquired enough features for a release (or a predetermined release date is approaching), you fork a release branch 
off of develop. Creating this branch starts the next release cycle, so no new features can be added after this point—only bug fixes, 
documentation generation, and other release-oriented tasks should go in this branch. Once it's ready to ship, 
the release branch gets merged into master and tagged with a version number. 
In addition, it should be merged back into develop, which may have progressed since the release was initiated.

- Derived from Develop branch


Hotfix branch
Maintenance or “hotfix” branches are used to quickly patch production releases. 
Hotfix branches are a lot like release branches and feature branches except they're based on master instead of develop. 
This is the only branch that should fork directly off of master

- Derived from Master branch

Feature branch
Each new feature should reside in its own branch, which can be pushed to the central repository for backup/collaboration. 
But, instead of branching off of master, feature branches use develop as their parent branch. 
When a feature is complete, it gets merged back into develop. Features should never interact directly with master.

- Derived from Develop branch



-------------------------------------------------
Partial commits
Partial commits, is the ability to commit only parts of a file. This  feature is useful to clean up a commit or to break a set of 
unrelated changes in separate commits. 